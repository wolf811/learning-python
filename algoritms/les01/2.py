# 2. Выполнить логические побитовые операции "И", "ИЛИ" и др. над числами 5 и 6. Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака. Объяснить полученный результат.

a = 5
b = 6
bin_a = bin(a)
bin_b = bin(b)

# print(f'''{a} в двоичном формате = {bin_a}
# {b} в двоичном формате = {bin_b}''')

# "И" оператор, копирует бит в результат только если бит присутствует в обоих операндах.
oper_and = a & b
# "ИЛИ" оператор копирует бит, если тот присутствует в хотя бы в одном операнде.
oper_or = a | b
# "Исключительное ИЛИ" оператор копирует бит только если бит присутствует в одном из операндов, но не в обоих сразу.
oper_xor = a ^ b
# Побитовое отрицание меняет биты на обратные, там где была единица станет ноль и наоборот.
oper_not_a = ~a
oper_not_b = ~b
# Побитовый сдвиг вправо. Значение левого операнда "сдвигается" вправо на количество бит указанных в правом операнде.
oper_right_a = a >> 2
# Побитовый сдвиг влево. Значение левого операнда "сдвигается" влево на количество бит указанных в правом операнде.
oper_left_a = a << 2

print(f'''Побитовая операция "И" для чисел {a}({bin_a}) и {b}({bin_b}): \
{bin(oper_and)} ({oper_and})''')

print(f'''Побитовая операция "ИЛИ" для чисел {a}({bin_a}) и {b}({bin_b}): \
{bin(oper_or)} ({oper_or})''')

print(f'''"Исключительное ИЛИ" для чисел {a}({bin_a}) и {b}({bin_b}): \
{bin(oper_xor)} ({oper_xor})''')

print(f'''Побитовое отрицание для числа {a}({bin_a}): \
{bin(oper_not_a)} ({oper_not_a})
для числа {b}({bin_b}): {bin(oper_not_b)} ({oper_not_b})''')

print(f'''Побитовый сдвиг вправо для числа {a}({bin_a}): \
{bin(oper_right_a)} ({oper_right_a})''')

print(f'''Побитовый сдвиг влево для числа {a}({bin_a}): \
{bin(oper_left_a)} ({oper_left_a})''')
